// Automatisch generierter Code. Nicht bearbeiten.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Level3":
            case "Level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Level1":
            case "Level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . 2 2 2 2 . . . . 2 . . . . 2 
2 . 2 . . 2 . 2 . . 2 . . . . 2 
2 . 2 . . 2 . 2 . . 2 2 2 2 . 2 
2 . 2 2 . 2 . 2 . . . . . . . 2 
2 . . . . 2 . 2 . . . 2 2 2 2 2 
2 . . . . 2 . 2 2 2 2 2 . . . 2 
2 . . 2 . 2 . . . . . 2 . . . 2 
2 . . 2 . 2 . . . . . 2 . . . 2 
2 . . 2 . 2 2 2 2 2 . 2 2 . . 2 
2 . . 2 . . 2 2 . . . . . . . 2 
2 . . 2 2 2 2 2 . 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "Level5":
            case "Level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Level6":
            case "Level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Level7":
            case "Level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Level4":
            case "Level4":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . . 2 . . . . 2 
2 2 2 . . 2 2 2 2 2 2 . . . . 2 
2 . 2 2 2 2 . . . . 2 . . . . 2 
2 . 2 . . 2 . 2 . . 2 . . . . 2 
2 . 2 . . 2 . 2 . . 2 2 2 2 . 2 
2 . 2 2 . 2 . 2 . . . . . . . 2 
2 . . . . 2 . 2 . . . 2 2 2 2 2 
2 . . . . 2 . 2 2 2 2 2 . . . 2 
2 . . 2 . 2 . . . . . . . . . 2 
2 . . 2 . 2 . . . . . . . . . 2 
2 . . 2 . 2 2 2 2 2 . . . . . 2 
2 . . 2 . . 2 2 . . . . . . . 2 
2 . . 2 2 2 2 2 . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "Level2":
            case "Level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . 2 2 2 2 . . . . 2 . . . . 2 
2 . 2 . . 2 . 2 . . 2 . . . . 2 
2 . 2 . . 2 . 2 . . 2 2 2 2 2 2 
2 . 2 2 . 2 . 2 . . . . . . . 2 
2 . . . . 2 . 2 . . . 2 2 2 2 2 
2 . . . . 2 . 2 2 2 2 2 . . . 2 
2 . . 2 . 2 . . . . . 2 . . . 2 
2 . . 2 . 2 . . . . . 2 . . . 2 
2 . . 2 . 2 2 2 2 2 . 2 2 . . 2 
2 . . 2 . . 2 2 . . . . . . . 2 
2 . . 2 2 2 2 2 . 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia,myTiles.tile1], TileScale.Sixteen);
            case "Level8":
            case "Level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Automatisch generierter Code. Nicht bearbeiten.
